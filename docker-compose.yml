version: '3'

# create network with port 5000
networks:
  default:
    external:
      name: mynetwork
  postgres:
    driver: bridge

# create application of bot named katyax
services:
  katyax:
    image: katyax-1.0.0
    container_name: katyax
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - default
    env_file:
      - .env
    volumes:
      - .:/katyax
      - ./katyax.sqlite:/katyax/katyax.sqlite
  webserver:
    image: webserver-1.0.0
    container_name: webserver
    build:
      context: .
      dockerfile: Dockerfile-flask
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - default
    ports:
      - "8088:8088"
    env_file:
      - .env
    volumes:
      - .:/katyax
      - ./katyax.sqlite:/katyax/katyax.sqlite
  postgres:
    container_name: postgres_container
    image: postgres:13.3
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "katyax"
      POSTGRES_USER: "testuser"
      POSTGRES_PASSWORD: "testpass"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    restart: on-failure
    volumes:
      - .:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "testuser", "-d", "katyax"]
      interval: 2s